[limit users]
#user-foo=1

[limit groups]
#bar-group=1

[security]
# SSHFS umask for client-side folder sharing. Leave uncommented to keep the server's default umask
#umask="0117"

[superenicer]
# enable the SupeReNicer code in x2gocleansessions, this will renice suspended sessions to nice level 19
# and renice them to level 0 if the session becomes marked as running again...
enable=no

# list of users that shall never be reniced
#ignored_users=

# force renicing of the complete user, don't set it to 'yes' unless you know what you are doing
#force-user-renice=no

# the normal nice level (for running sessions)
#normal-nice-level=0

# the idle nice level (for suspended sessions)
#idle-nice-level=19

[telekinesis]
# telekinesis provides a bidirectional communication framework between X2Go Client
# and X2Go Server
enable=no

[x2goagent]
# Value can be either "host-based" or "pure-random".
# This is currently a workaround for a bug in X2Go Client, that uses a 1:1
# mapping of source to destination ports for SSH tunnels.
# This leads to problems if opening two (or more) instances of X2Go Client
# and connecting to two machines that use the same tunneling ports.
# Such a scenario is easy to trigger: make sure that both machines have run
# no active sessions, than spawn one session on each machine.
# Connecting to both at the same time will not be possible without a means
# of randomization.
# The randomization can either be "host-based", in which case the port will
# be set to 30000 + (128 * last octet of IPv4 address) and does the job if
# the last octet of the machine's IPv4 address is known to be unique, or
# "pure-random" which uses the (not so truly random) bash ${RANDOM}
# variable to fully randomize the port, i.e., 30000 + random(0..32767).
port_randomization="pure-random"

[log]
# possible levels are: emerg, alert, crit, err, warning, notice, info, debug
loglevel=notice
