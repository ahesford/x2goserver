#!/bin/bash

cd ~
#use only with sudo !!

SERVER=$1
UNAME=$SUDO_USER

case "$2" in

getdisplays)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select '|'||display||'|' from sessions  where server = '$3';\"|psql -t x2go_sessions"
  ;;

getports)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select '|'||port||'|' from used_ports  where server = '$3';\"|psql -t x2go_sessions"
  ;;

getservers)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select server,count(*) from sessions where status != 'F' group by server;\"|psql -t x2go_sessions"
  ;;

listsessions)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select agent_pid, session_id, display, server, status,\
   to_char(init_time,'DD.MM.YY*HH24:MI:SS'),cookie,client,gr_port,\
   sound_port,to_char(last_time,'DD.MM.YY*HH24:MI:SS'),uname,\
   to_char(now()-init_time,'SSSS') from  sessions  \
   where status !='F' and server='$3' and uname='$UNAME' order by status desc;\"|psql -t x2go_sessions"
  ;;

listsessionsroot)
  if [ "$UNAME" != "root" ]
  then
    echo "$UNAME, You have not permission to do this job!"
    exit  
  fi
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select agent_pid, session_id, display, server, status,\
   to_char(init_time,'DD.MM.YY*HH24:MI:SS'),cookie,client,gr_port,\
   sound_port,to_char(last_time,'DD.MM.YY*HH24:MI:SS'),uname,\
   to_char(now()-init_time,'SSSS') from  sessions  \
   where server='$3'  order by status desc;\"|psql -t x2go_sessions"
  ;;

rmsessionsroot)
  if [ "$UNAME" != "root" ]
  then
    echo "$UNAME, You have not permission to do this job!"
    exit  
  fi
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"delete from  sessions  \
   where session_id='$3' ;\"|psql -t x2go_sessions"
  ;;


getagent)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select agent_pid from sessions  where session_id = '$3';\"|psql -t x2go_sessions"
  ;;

getdisplay)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select display from sessions  where session_id = '$3';\"|psql -t x2go_sessions"
  ;;

changestatus)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"update sessions set last_time=now(),status='$3' where session_id = '$4' and uname='$UNAME';\"|psql -t x2go_sessions"
  ;;

resume)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"update sessions set last_time=now(),status='R',client='$3' where session_id = '$4' and uname='$UNAME';\"|psql -t x2go_sessions"
  ;;

insertsession)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"insert into sessions (display,server,uname,session_id) values \
  ('$3','$4','$UNAME','$5');\"|psql x2go_sessions"
  ;;

createsession)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"update sessions set status='R',last_time=now(),cookie='$3',agent_pid='$4',\
   client='$5',gr_port='$6',sound_port='$7' where session_id='$8' and uname='$UNAME';\"|psql x2go_sessions"
  ;;

insertport)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"insert into used_ports (server,session_id,port) values \
  ('$3','$4','$5');\"|psql x2go_sessions"
  ;;

insertmount)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"insert into mounts (session_id,path,client) values \
  ('$3','$4','$5');\"|psql x2go_sessions"
  ;;

deletemount)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"delete from mounts where session_id='$3' and path='$4';\"|psql x2go_sessions"
  ;;

getmounts)
  ssh -i ~postgres/.ssh/id_dsa postgres@$SERVER "echo \"select client,path from mounts where session_id = '$3';\"|psql -t x2go_sessions"
  ;;

*)
  echo "$2: wrong argument"
  ;;

esac

