#!/bin/sh
# postrm script for x2goserver-xsession

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

set -e

if dpkg --compare-versions -- "${DPKG_RUNNING_VERSION}" ge '1.17.14'; then
	dpkg-maintscript-helper 'dir_to_symlink' \
	  '/etc/x2go/Xsession.d' '/etc/X11/Xsession.d' '4.1.0.2-0~' 'x2goserver-xsession' -- "${@}"
else
	abort_dir_to_symlink()
	{
		local PATHNAME="${1}"

		echo "Restoring backup of ${PATHNAME} ..."
		if [ -h "${PATHNAME}" ]; then
			rm -f "${PATHNAME}"
		else
			# The staging directory must be empty, as no other package
			# should have been unpacked in between.
			rm -f "${PATHNAME}/.dpkg-staging-dir"
			rmdir "${PATHNAME}"
		fi

		mv "${PATHNAME}.dpkg-backup" "${PATHNAME}"
	}
fi

PATHNAME='/etc/x2go/Xsession.d'
SYMLINK_TARGET='/etc/X11/Xsession.d'
case "${1}" in
	'purge')
		if dpkg --compare-versions -- "${DPKG_RUNNING_VERSION}" lt '1.17.14'; then
			[ -d "${PATHNAME}.dpkg-backup" ] && rm -rf "${PATHNAME}.dpkg-backup"
		fi
		;;
	'abort-install'|'abort-upgrade')
		if dpkg --compare-versions -- "${DPKG_RUNNING_VERSION}" lt '1.17.14'; then
			[ -n "${2}" ] &&
			[ -d "${PATHNAME}.dpkg-backup" ] &&
			[ \( ! -h "${PATHNAME}" -a -d "${PATHNAME}" -a \
			     -f "${PATHNAME}/.dpkg-staging-dir" \) -o \
			  \( -h "${PATHNAME}" -a \
			     \( "$(readlink "${PATHNAME}")" = "${SYMLINK_TARGET}" -o \
			        "$(readlink -f "${PATHNAME}")" = "${SYMLINK_TARGET}" \) \) ] &&
			dpkg --compare-versions -- "${2}" le-nl '4.1.0.2-0~' &&
				abort_dir_to_symlink "${PATHNAME}"
		fi
		;;
	'remove'|'upgrade'|'failed-upgrade'|'disappear')
		;;
	*)
		echo "${0} called with unknown argument '${1}'" >&2
		exit '1'
		;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit '0'
